spring:
  application:
    name: sidecar
    
server: 
  port: 8983
  
management:
    security: 
      enabled: false
    endpoints: 
      web: 
       exposure: 
        include: '*' 
    
sidecar:
  hostname: localhost
  # port should be passed from command line (eg java -jar ... --sidecar.port=5432 ...)
  port: 8981
  # health-uri the service uri returning health data in the form of { "status": "UP" } or
  # http://localhost:${sidecar.port}/${health-uri:health.json} if the service provides such endpoint.
  health-uri: http://localhost:${server.port}/delegating-status
  # Sidecar controller
  home-page-uri: http://${sidecar.hostname}:${server.port}/
  service:
    enabled: true
    
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8982/eureka}
  instance:
    appname: ${spring.application.name}
    hostname: ${sidecar.hostname}
    statusPageUrlPath: /info
    healthCheckUrlPath: ${sidecar.health-uri}
    preferIpAddress: true
    metadataMap:
      instanceId: ${sidecar.appName}:${sidecar.port}
      
zuul:
  routes:
    config-client:
      path: /config-client/**
      url: http://localhost:8981
      
